generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  oauth_id String @unique
  email String  @unique
  name  String?
  profile_pic String?
  GPA   Float?
  is_school_admin Boolean @default(false)
  classes UsersInClasses[]
  grades Grade[]
}

model Assignment{
  id      Int   @id @default(autoincrement())
  createdAt DateTime @default(now())
  name  String
  dueDate DateTime?
  description String
  pointsWorth Int
  classId Int
  class Class @relation(fields: [classId], references: [id])
  grades Grade[]
}

 model Grade {
   //id Int @id @default(autoincrement())
   createdAt DateTime @default(now())
   assigneeId Int
   assignee User @relation(fields: [assigneeId], references: id)
   assignmentId Int
   grade Decimal
   course Assignment @relation(fields: [assignmentId], references: id)
   @@id([assigneeId, assignmentId])
 }

model Class {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name     String
  number String @unique
  enrolled Int
  capacity Int
  description String?
  students UsersInClasses[]
  assignment Assignment[]

  @@fulltext([number])
  @@fulltext([name])
  @@fulltext([name, number])
}

model UsersInClasses {
    user User @relation(fields: [userId], references: [id])
    userId Int
    class Class @relation(fields: [classId], references: [id])
    classId Int
    isInstructor Boolean @default(false)
    enrolledAt DateTime @default(now())
    @@id([userId, classId])
}

